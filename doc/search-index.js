var searchIndex = {};
searchIndex["amethyst"] = {"doc":"Amethyst is a free and open source game engine written in idiomatic\n[Rust][rs] for building video games and interactive multimedia applications.\nThe source code is available for download on [GitHub][gh]. See the\n[online book][bk] for a complete guide to using Amethyst.","items":[[8,"State","amethyst::engine","A trait which defines game states that can be used by the state machine.",null,null],[11,"on_start","","Executed when the game state begins.",0,null],[11,"on_stop","","Executed when the game state exits.",0,null],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",0,null],[11,"on_resume","","Executed when the application returns to this game state once again.",0,null],[11,"handle_events","","Executed on every frame before updating, for use in reacting to events.",0,null],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second\nby default).",0,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",0,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}],[11,"new","amethyst_engine::timing","",1,{"inputs":[],"output":{"name":"stopwatch"}}],[11,"elapsed","","Retrieves the elapsed time.",1,{"inputs":[{"name":"stopwatch"}],"output":{"name":"duration"}}],[11,"restart","","Stops, resets, and starts the stopwatch again.",1,null],[11,"start","","Starts, or resumes, measuring elapsed time. If the stopwatch has been\nstarted and stopped before, the new results are compounded onto the\nexisting elapsed time value.",1,null],[11,"stop","","Stops measuring elapsed time.",1,null],[11,"reset","","Clears the current elapsed time value.",1,null],[3,"Stopwatch","amethyst::engine","Useful utility for accurately measuring elapsed time.",null,null],[11,"new","amethyst_engine::app","Creates a new Application with the given initial game state.",2,{"inputs":[{"name":"t"}],"output":{"name":"application"}}],[11,"run","","Starts the application and manages the game loop.",2,null],[3,"Application","amethyst::engine","User-friendly facade for building games. Manages main loop.",null,null],[4,"Trans","","Types of state transitions.",null,null],[13,"None","","Continue as normal.",3,null],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",3,null],[13,"Push","","Pause the active state and push a new state onto the stack.",3,null],[13,"Switch","","Remove the current state on the stack and insert a different one.",3,null],[13,"Quit","","Stop and remove all states and shut down the engine.",3,null],[11,"weeks","time::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Duration","amethyst::engine","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[11,"new","amethyst_engine::state","",5,{"inputs":[{"name":"t"}],"output":{"name":"statemachine"}}],[11,"is_running","","Checks whether the state machine is running.",5,{"inputs":[{"name":"statemachine"}],"output":{"name":"bool"}}],[11,"start","","Initializes the state machine.\n# Panics\nPanics if no states are present in the stack.",5,null],[11,"handle_events","","Passes a vector of events to the active state to handle.",5,null],[11,"fixed_update","","Updates the currently active state at a steady, fixed interval.",5,null],[11,"update","","Updates the currently active state immediately.",5,null],[3,"StateMachine","amethyst::engine","A simple stack-based state machine (pushdown automaton).",null,null],[11,"add","time","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"steadytime"}}],[11,"clone","","",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"SteadyTime","amethyst::engine","A structure representing a moment in time.",null,null],[11,"new","amethyst_renderer::backend","",7,{"inputs":[],"output":{"name":"backend"}}],[3,"Backend","amethyst::renderer","",null,null],[11,"new","amethyst_renderer::frontend","",8,{"inputs":[],"output":{"name":"frontend"}}],[3,"Frontend","amethyst::renderer","",null,null]],"paths":[[8,"State"],[3,"Stopwatch"],[3,"Application"],[4,"Trans"],[3,"Duration"],[3,"StateMachine"],[3,"SteadyTime"],[3,"Backend"],[3,"Frontend"]]};
searchIndex["amethyst_engine"] = {"doc":"Game engine sitting atop the core libraries.","items":[[11,"weeks","time::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",0,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",0,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",0,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",0,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",0,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",0,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",0,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",0,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",0,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"div","","",0,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"mul","","",0,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"sub","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"neg","","",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"clone","","",0,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"eq","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"fmt","","",0,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Duration","amethyst_engine","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[11,"add","time","",1,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"sub","","",1,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"sub","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"fmt","","",1,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",1,{"inputs":[],"output":{"name":"steadytime"}}],[11,"clone","","",1,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"eq","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"SteadyTime","amethyst_engine","A structure representing a moment in time.",null,null],[3,"Application","","User-friendly facade for building games. Manages main loop.",null,null],[3,"StateMachine","","A simple stack-based state machine (pushdown automaton).",null,null],[3,"Stopwatch","","Useful utility for accurately measuring elapsed time.",null,null],[4,"Trans","","Types of state transitions.",null,null],[13,"None","","Continue as normal.",2,null],[13,"Pop","","Remove the active state and resume the next state on the stack or stop if there are none.",2,null],[13,"Push","","Pause the active state and push a new state onto the stack.",2,null],[13,"Switch","","Remove the current state on the stack and insert a different one.",2,null],[13,"Quit","","Stop and remove all states and shut down the engine.",2,null],[11,"new","","Creates a new Application with the given initial game state.",3,{"inputs":[{"name":"t"}],"output":{"name":"application"}}],[11,"run","","Starts the application and manages the game loop.",3,{"inputs":[{"name":"application"}],"output":null}],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"statemachine"}}],[11,"is_running","","Checks whether the state machine is running.",4,{"inputs":[{"name":"statemachine"}],"output":{"name":"bool"}}],[11,"start","","Initializes the state machine.\n# Panics\nPanics if no states are present in the stack.",4,{"inputs":[{"name":"statemachine"}],"output":null}],[11,"handle_events","","Passes a vector of events to the active state to handle.",4,null],[11,"fixed_update","","Updates the currently active state at a steady, fixed interval.",4,{"inputs":[{"name":"statemachine"},{"name":"duration"}],"output":null}],[11,"update","","Updates the currently active state immediately.",4,{"inputs":[{"name":"statemachine"},{"name":"duration"}],"output":null}],[11,"new","","",5,{"inputs":[],"output":{"name":"stopwatch"}}],[11,"elapsed","","Retrieves the elapsed time.",5,{"inputs":[{"name":"stopwatch"}],"output":{"name":"duration"}}],[11,"restart","","Stops, resets, and starts the stopwatch again.",5,{"inputs":[{"name":"stopwatch"}],"output":null}],[11,"start","","Starts, or resumes, measuring elapsed time. If the stopwatch has been\nstarted and stopped before, the new results are compounded onto the\nexisting elapsed time value.",5,{"inputs":[{"name":"stopwatch"}],"output":null}],[11,"stop","","Stops measuring elapsed time.",5,{"inputs":[{"name":"stopwatch"}],"output":null}],[11,"reset","","Clears the current elapsed time value.",5,{"inputs":[{"name":"stopwatch"}],"output":null}],[8,"State","","A trait which defines game states that can be used by the state machine.",null,null],[11,"on_start","","Executed when the game state begins.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_stop","","Executed when the game state exits.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_resume","","Executed when the application returns to this game state once again.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"handle_events","","Executed on every frame before updating, for use in reacting to events.",6,null],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second\nby default).",6,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",6,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}],[11,"on_start","","Executed when the game state begins.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_stop","","Executed when the game state exits.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_pause","","Executed when a different game state is pushed onto the stack.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"on_resume","","Executed when the application returns to this game state once again.",6,{"inputs":[{"name":"state"}],"output":null}],[11,"handle_events","","Executed on every frame before updating, for use in reacting to events.",6,null],[11,"fixed_update","","Executed repeatedly at stable, predictable intervals (1/60th of a second\nby default).",6,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}],[11,"update","","Executed on every frame immediately, as fast as the engine will allow.",6,{"inputs":[{"name":"state"},{"name":"duration"}],"output":{"name":"trans"}}]],"paths":[[3,"Duration"],[3,"SteadyTime"],[4,"Trans"],[3,"Application"],[3,"StateMachine"],[3,"Stopwatch"],[8,"State"]]};
initSearch(searchIndex);
